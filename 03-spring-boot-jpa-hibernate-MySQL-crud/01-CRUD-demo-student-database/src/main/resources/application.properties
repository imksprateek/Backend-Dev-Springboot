spring.application.name=cruddemo
spring.datasource.url=jdbc:mysql://localhost:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
#The above all properties are Must to connect to a database

#To turn off the Spring Boot Banner in output do this-
spring.main.banner-mode=off

#Reduce the logging level. Set the loggin level to warn. This is just to minimize our output. In production environments this is not recommended
logging.level.root=warn

#To display sql queries in the terminal
#spring.jpa.show-sql=true


#spring.jpa.generate-ddl=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


#When the below line is added, there is no need to run SQL script first to create the database tables. It can be done just through Java code via auto generation. When the app is run, JPA/Hibernate will drop tables then create them based on JPA/Hibernate annotations in your Java code. For basic personal/hobby projects only we use auto generation. It is not recommended for enterprise applications. Leave SQL queries part to DBAs instead. SQL scripts are recommended because they can be customized and fine tuned for complex database designs and version-controlled, can also work with schema migration tools such as Liquibase and Flyway.
#spring.jpa.hibernate.ddl-auto=create       Database tables are dropped followed by database tables creation. DONT DO THIS on Production databases. You don't want to drop your production data. If dropped all data is deleted
#spring.jpa.hibernate.ddl-auto=none         No action will be performed
#spring.jpa.hibernate.ddl-auto=create-only  Database tables are only created
#spring.jpa.hibernate.ddl-auto=drop         Database tables are dropped
#spring.jpa.hibernate.ddl-auto=create-drop  Database tables are dropped followed by database tables creation. On application shutdown, drop the database tables. Useful primarily for Unit testing
#spring.jpa.hibernate.ddl-auto=validate     Validates the database schema
#spring.jpa.hibernate.ddl-auto=update       Update the database tables schema. Use this if you want to create tables once and then keep data. However, it will alter database schema based on latest code updates. Be very careful here. Only use for basic projects.
spring.jpa.hibernate.ddl-auto=update

#Add logging configs to display SQL statements
logging.level.org.hibernate.SQL=debug
#The above line is used to log SQL statements
logging.level.org.hibernate.orm.jdbc.bind=trace
#The above line allows us to see the actual values that are being assigned for these statements (Log values for SQL statements)